using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace lab2_net2
{
    struct Airplane
    {
        public string name;
        public int year;
        public int amount;

        public string DisplayInfo()
        {
            return ($"Название: {name} \r\nГод: {year} \r\nКол-во мест: {amount}");
        }
    }
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                double x = double.Parse(textBox1.Text);
                double y = double.Parse(textBox2.Text);
                double z = double.Parse(textBox3.Text);

                double denominator = z + (x * x) / 4;
                if (Math.Abs(denominator) < 0.000001)
                {
                    textBox4.Text = "Ошибка: знаменатель равен нулю!";
                }
                else
                {
                    double a = Math.Log(Math.Abs((y - Math.Sqrt(Math.Abs(x))) * (x - (y / denominator))));
                    textBox4.Text = a.ToString("F4");
                }

                if (Math.Abs(x) < 0.000001)
                {
                    textBox5.Text = "Ошибка: деление на ноль!";
                }
                else
                {
                    double b = x - ((x * x) / 3) + ((x + y) / x);
                    textBox5.Text = b.ToString("F4");
                }
            }
            catch
            {
                MessageBox.Show("Введите корректные числа", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            try
            {
                double rad = double.Parse(textBox6.Text);

                if (rad < 0)
                {
                    MessageBox.Show("Ошибка: радиус не может быть отрицательным!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                double C = 2 * Math.PI * rad;
                double S = Math.PI * rad * rad;
                double V = (4.0 / 3.0) * Math.PI * rad * rad * rad;

                textBox7.Text = C.ToString("F4");
                textBox8.Text = S.ToString("F4");
                textBox9.Text = V.ToString("F4");
            }
            catch
            {
                MessageBox.Show("Введите корректное число", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void label11_Click(object sender, EventArgs e)
        {

        }

        private void button3_Click(object sender, EventArgs e)
        {
            try
            {
                double a1 = double.Parse(textBox10.Text);
                double a2 = double.Parse(textBox11.Text);
                double a3 = double.Parse(textBox12.Text);

                double min, mid, max;
                if (a1 > a2 && a1 > a3)
                {
                    max = a1;
                    if (a2 >= a3)
                    {
                        mid = a2;
                        min = a3;
                    }
                    else
                    {
                        mid = a3;
                        min = a2;
                    }
                }
                else if (a2 > a1 && a2 > a3)
                {
                    max = a2;
                    if (a1 >= a3)
                    {
                        mid = a1;
                        min = a3;
                    }
                    else
                    {
                        mid = a3;
                        min = a1;
                    }
                }
                else
                {
                    max = a3;
                    if (a2 >= a1)
                    {
                        mid = a2;
                        min = a1;
                    }
                    else
                    {
                        mid = a1;
                        min = a2;
                    }
                }

                textBox13.Text = max.ToString("F4");
                textBox14.Text = $"{min:F2}, {mid:F2}, {max:F2}";
            }
            catch
            {
                MessageBox.Show("Введите корректные числа", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void Вычислить_Click(object sender, EventArgs e)
        {
            try
            {
                double p1 = double.Parse(textBox15.Text);
                double l1 = double.Parse(textBox16.Text);

                if (p1 < 0)
                {
                    MessageBox.Show("Ошибка: полупериметр не может быть отрицательным!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                if (l1 < 0)
                {
                    MessageBox.Show("Ошибка: длина не может быть отрицательной!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                double S1 = p1 * l1;
                textBox17.Text = S1.ToString("F4");
            }
            catch
            {
                MessageBox.Show("Введите корректные числа", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void button5_Click(object sender, EventArgs e)
        {
            try
            {
                double p2 = double.Parse(textBox18.Text);
                double h1 = double.Parse(textBox19.Text);

                if (p2 < 0)
                {
                    MessageBox.Show("Ошибка: полупериметр не может быть отрицательным!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                if (h1 < 0)
                {
                    MessageBox.Show("Ошибка: высота не может быть отрицательной!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                double S2 = p2 * (h1 / 2);
                textBox20.Text = S2.ToString("F4");
            }
            catch
            {
                MessageBox.Show("Введите корректные числа", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void button6_Click(object sender, EventArgs e)
        {
            try
            {
                double R = double.Parse(textBox21.Text);
                double h2 = double.Parse(textBox22.Text);

                if (R < 0)
                {
                    MessageBox.Show("Ошибка: радиус не может быть отрицательным!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                if (h2 < 0)
                {
                    MessageBox.Show("Ошибка: высота не может быть отрицательной!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                double S3 = 2 * Math.PI * R * h2;
                textBox23.Text = S3.ToString("F4");
            }
            catch
            {
                MessageBox.Show("Введите корректные числа", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void button7_Click(object sender, EventArgs e)
        {
            try
            {
                double R2 = double.Parse(textBox24.Text);
                double l2 = double.Parse(textBox25.Text);

                if (R2 < 0)
                {
                    MessageBox.Show("Ошибка: радиус не может быть отрицательным!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                if (l2 < 0)
                {
                    MessageBox.Show("Ошибка: длина не может быть отрицательной!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                double S4 = 2 * Math.PI * R2 * l2;
                textBox26.Text = S4.ToString("F4");
            }
            catch
            {
                MessageBox.Show("Введите корректные числа", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void button8_Click(object sender, EventArgs e)
        {
            try
            {
                double R3 = double.Parse(textBox27.Text);

                if (R3 < 0)
                {
                    MessageBox.Show("Ошибка: радиус не может быть отрицательным!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                double S5 = Math.PI * R3 * R3;
                textBox28.Text = S5.ToString("F4");
            }
            catch
            {
                MessageBox.Show("Введите корректное число", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void button9_Click(object sender, EventArgs e)
        {
            try
            {
                double R6 = double.Parse(textBox29.Text);
                double h3 = double.Parse(textBox30.Text);
                double a6 = double.Parse(textBox31.Text);

  
                if (R6 < 0)
                {
                    MessageBox.Show("Ошибка: радиус не может быть отрицательным!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                if (h3 < 0)
                {
                    MessageBox.Show("Ошибка: высота не может быть отрицательной!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                if (a6 < 0)
                {
                    MessageBox.Show("Ошибка: сторона не может быть отрицательной!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                double S6 = Math.PI * R6 * (2 * h3 + a6);
                textBox32.Text = S6.ToString("F4");
            }
            catch
            {
                MessageBox.Show("Введите корректные числа", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void button10_Click(object sender, EventArgs e)
        {
            try
            {
                Airplane airplane;

                airplane.name = textBox33.Text;

                if (!int.TryParse(textBox34.Text, out int year) || year <= 0)
                {
                    MessageBox.Show("Введите корректный год (положительное целое число)", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                airplane.year = year;

                if (!int.TryParse(textBox35.Text, out int amount) || amount < 0)
                {
                    MessageBox.Show("Введите корректное количество мест (неотрицательное целое число)", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                airplane.amount = amount;

                textBox37.Text = airplane.DisplayInfo();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка: {ex.Message}", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}
