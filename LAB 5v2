using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace LAB_5_WF
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            string word = textBox1.Text.Trim();

            if (string.IsNullOrEmpty(word))
            {
                MessageBox.Show("Пустой ввод. Попробуйте снова.", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            if (word.Contains(" "))
            {
                MessageBox.Show("Слово не должно содержать пробелов. Попробуйте снова.", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            if (!word.All(char.IsLetter))
            {
                MessageBox.Show("Слово должно содержать только буквы. Попробуйте снова.", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            if (word.Length < 2)
            {
                MessageBox.Show("Слово слишком короткое. Введите хотя бы 2 символа.", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            if (word.Length % 2 == 1)
            {
                int mid = word.Length / 2;
                word = word.Insert(mid + 1, word[mid].ToString());
            }
            else
            {
                MessageBox.Show("Длина слова чётная, изменений не требуется.", "Информация", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }

            textBox2.Text = word;
        }


        private void button2_Click(object sender, EventArgs e)
        {
            string input = textBox3.Text.Trim();

            if (string.IsNullOrEmpty(input))
            {
                MessageBox.Show("Последовательность пуста, введите снова");
                return;
            }

            if (!input.EndsWith("."))
            {
                MessageBox.Show("Последовательность должна заканчиваться точкой, попробуйте снова");
                return;
            }

            string text = input.Substring(0, input.Length - 1).Trim();
            string[] words = text.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);

            List<string> validWords = new List<string>();
            List<string> invalidWords = new List<string>();

            foreach (var w in words)
            {
                if (w.All(c => c >= 'a' && c <= 'z') && w.Length >= 1 && w.Length <= 8)
                    validWords.Add(w);
                else
                    invalidWords.Add(w);
            }

            if (validWords.Count < 2 || validWords.Count > 50)
            {
                MessageBox.Show("Число слов должно быть от 2 до 50");
                return;
            }

            if (invalidWords.Count > 0)
            {
                MessageBox.Show("Исключённые слова: " + string.Join(", ", invalidWords),
                                "Информация",
                                MessageBoxButtons.OK,
                                MessageBoxIcon.Warning);
            }


            string lastWord = validWords[validWords.Count - 1];
            int minLen = validWords.Min(w => w.Length);

            List<string> result2 = new List<string>();

            foreach (var w in validWords)
            {
                if (w.Length == minLen && !w.Equals(lastWord))
                    result2.Add(w);
            }

            textBox4.Text = result2.Count == 0 ? "Подходящих по всем условиям слов - не существует" : string.Join(", ", result2);

        }

        private void button3_Click(object sender, EventArgs e)
        {
            string input = textBox5.Text.Trim();

            if (input.Length != 2)
            {
                MessageBox.Show("Некорректный ввод, введите снова");
                return;
            }

            char letter = input[0];
            char number = input[1];

            if (letter < 'a' || letter > 'h' || number < '1' || number > '8')
            {
                MessageBox.Show("Некорректная координата, введите снова");
                return;
            }

            int row = int.Parse(number.ToString());
            int nextRow = row + 1;

            if (nextRow > 8)
            {
                textBox6.Text = $"С поля {input} пешка не может бить вперед";
                return;
            }

            List<string> result3 = new List<string>();
            if (letter > 'a')
                result3.Add($"{(char)(letter - 1)}{nextRow}");
            if (letter < 'h')
                result3.Add($"{(char)(letter + 1)}{nextRow}");

            textBox6.Text = $"{string.Join(", ", result3)}";
        }
    }
}
